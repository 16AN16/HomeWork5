
1.Почему в большинстве ситуаций стоит использовать flexbox-позиционирование?

Потому что Flexbox предназначен для создания гибких макетов. С помощью этой технологии можно очень удобно и быстро распределять и выравнивать элементы.

2. Самостоятельно изучи способ позиционирования через display: table  и ответьте на вопрос, для каких ситуаций оно лучше всего подходит? 

Display: table лучше всего подходит если необходимо динамическое верЭто, пожалуй, самый распространённый способ использования display: table.
 С его помощью можно получить истинное выравнивание по вертикали элементов с динамической высотой.тикальное выравнивание по центру.

3.Какие есть оси во флекс-верстке и как задается их направление?

Во флекс-верстке есть главная и поперечная ось. 
Главная ось задается слева направо, поперечная ось сверху вниз.

4.Разберитесь, как работает свойство margin: auto во флекс-верстке, приведите пример использования

Когда есть необходимость разделить набор flex элементов для создания отдельного шаблона навигации. В таком случае, можно использовать атрибут margin со значением auto. Атрибут с таким значением будет занимать все доступное пространство в своём измерении. Так работает центрирование блока со свойством margin:auto. Установив значение атрибутов margin-left и margin-right в значение auto, обе стороны нашего блока попытаются занять все доступное пространство и, таким образом, заставят двигаться блок в центр.

Установив значение атрибутаmargin в auto для одного элемента в наборе с flex-элементами, выровненных с начала, можно создать разделённую навигацию. Это хорошо работает с разметкой flexbox и свойствами выравнивания. Как только для элемента со свойством margin: auto не остаётся свободного места, он станет вести себя также, как и все остальные flex элементы, и сократится в объёме, пытаясь уместиться в доступное пространство.

Например: 
box {
  display: flex;
}
.push {
    margin-left: auto;
}
      <div class="box">
  <div>One</div>
  <div>Two</div>
  <div>Three</div>
  <div class="push">Four</div>
  <div>Five</div>
</div>
      
5.В чем преимущества box-sizing?

box-sizing (со значением content-box по умолчанию) позволяет убрать пространство вокруг контента, то есть границы будут отрисованы внутри блока, а внутренние отступы не повлияют на его размеры.

6. Чем отличается flex-grow от flex-shrink?


flex-grow
Это свойство указывает, может ли вырастать флекс-элемент при наличии свободного места, и насколько. По умолчанию значение равно 0. Значением может быть любое положительное целое число (включая 0).

Если у всех флекс-элементов будет прописано flex-grow: 1, то свободное пространство в контейнере будет равномерно распределено между всеми.

Если при этом одному из элементов мы зададим flex-grow: 2, то он постарается занять в два раза больше свободного места, чем его соседи.

Свойство flex-shrink полностью противоположно свойству flex-grow. Если в контейнере не хватает места для расположения всех элементов без изменения размеров, то свойство flex-shrink указывает, в каких пропорциях элемент будет уменьшаться.

Чем больше значение у этого свойства, тем быстрее элемент будет сжиматься по сравнению с соседями, имеющими меньшее значение.

Значение по умолчанию — 1. Значением может быть любое целое положительное число (включая 0).

Эти свойства работают с пропорциональным разделением пространства, не с конкретными размерами. 

7. Как можно добиться следующего позиционирования элементов:

с помощью свойства space-between первый элемент прижат к началу контейнера, последний — к концу, а остальные расставлены между ними с одинаковыми промежутками. Подходит для меню, растянутого во всю ширину страницы.

8. Какой в итоге будет размер у элемента (можно округлить)? 

148,5рх на 18рх 

9. Самостоятельно разберись, зачем нужно свойство order?


CSS свойство order определяет порядок, используемый для размещения flex элементов в их flex контейнере. Элементы располагаются в восходящем порядке по значению order. Элементы с одинаковым значением order располагаются в том порядке, в каком они находятся в исходном коде.

10. Каким кодом можно сделать такую таблицу?

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
</head>

<body>
    <table border="1">
        <tr>
            <td>Columu 1</td>
            <td colspan="2">Columu 2 Columu 3</td>
        </tr>
        <tr>
            <td rowspan="2">row 1 cell 1</td>
            <td>row 1 cell 2</td>
            <td>row 1 cell 3</td>
        </tr>
        <tr>
            <td>row 2 cell 2</td>
            <td>row 2 cell 3</td>
        <tr>
            <td colspan="3">row 3 cell 1</td>
        </tr>
    </table>

</body>

11. Как рассчитывается размер flex-контейнера?

Размер flex-контейнера рассчитывается на основе свойств и значений, заданных для его элементов и контейнера в целом. Расчет происходит в два этапа: определение размера. Размер flex-контейнера рассчитывается на основе свойств и значений, заданных для его элементов и контейнера в целом. Расчет происходит в два этапа: определение размера контейнера без учета гибких элементов и распределение доступного пространства между ними. Первый этап включает в себя определение "неизменяемого" размера контейнера, то есть размера, который задан явно для контейнера или его элементов.
